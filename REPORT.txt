REPORT.txt

CSC418 Winter 2016 Assignment 2 Part B: 3D Robot Penguin

by

Student Name: Xiuyan Yu
Student ID: 1000756719
CDF Account: c5yuxiuy

------------------------------------

Objective
---------

To draw a 3D penguin and control 26 degrees of freedom, as well as a to create a keyframe saving tool to allow setting keyframes that will be automatically interpolated to animate the penguin. Additionally, various rendering modes to demonstrate both the polygon structure and lighting were added.

Changes were made only to main.cpp and keyframes.txt in the source code.

How I Built the Penguin
-----------------------

The penguin's default orientation is standing upright and facing my left (the viewer's left).

The penguin is built of eight different types of body parts: body, head, wing, hand, beak, chin, leg, and foot. It has two of wing, hand, leg, and foot, and one of everything else. Each one of these is constructed using GL_QUADS primitives by defining 6 faces per body part. To give the robot penguin a "robotic" appearance and also for my programming convenience, no surfaces with curvature were drawn, and all sides of the penguin consist of flat shapes.

The function drawPenguin() in main.cpp takes UI input about the degrees of freedom and applies the corresponding transformations to the penguin in a hierarchical fashion while drawing each body part. You can see that it calls various other drawing functions such as drawHead(), drawWing(), etc. to make the transformation hierarchy more obvious.


Creating the Degrees of Freedom
-------------------------------

The elbow and knee joints connect wings to hands and legs to feet respectively. The joints (i.e. the axis of rotation) are located in the center of where parts are connected to each other to prevent the appearance of parts splitting away for large rotation angles. However the wings are attached to the body on an edge instead of along the center of an edge, so there is no overlapping between the wing and the body for various wing pitch angles.

The wings and legs are allowed rotations in three dimensions:

Pitch: Raise wing or leg
Yaw: Swing wing or leg from side to side
Roll: Twist wing or leg

These apply where they connect to the main body as their center of rotation (at the shoulders and hips). They are applied after the elbow and knee joint transformations to allow the wing-hand and leg-foot to rotate as one part.

The chin is allowed to move up and down to allow the penguin to "speak". The penguin can also extend its arm outwards by scaling the arm along its length.

Finally global translations and rotations in three dimensions can be applied to the entire penguin.

Here is a schematic of the kinematic tree:

                 penguin_body
                /      |     \
             head    wing    leg
              /        |      \
           chin      hand     foot


Polygon Rendering Styles
------------------------

Wireframe: The shapes that make up the penguin were rendered as lines, to give the appearance of see-through or non-existent surfaces. This is useful for seeing the shapes that make up the entire penguin, since back faces that are obscured in the other rendering modes are visible.

Solid: The front-facing surfaces that are not obscured by any other surface are rendered with a constant color fill. This rendering style does not use lighting to illuminate the penguin surfaces, so without animations it appears almost 2D.

Solid with Outlines: This is the same as the previous rendering style, only with the visible edges being outlined in black to make the 3D shape appear clearly. Polygon offset had to be enabled for the outlines to be visible to the viewer, to prevent the outlines from fighting with the solid fill since they are located at the same points.

Metallic: Lighting is enabled for this style. To emulate a metallic surface's shiny and highly reflective finish, the material properties were given high specular reflectivity for each color component and a high shininess. This means that even flat faces can have high variation of color depending on their distance and angle from the light source.

Matte: Lighting is enabled for this style. To contrast with the metallic style, the material was given zero shininess and specular reflectivity. This causes flat faces to appear as if they are filled with a single color.

Lighting
--------

The Phong Reflection Model was used for rendering light and also for defining how the two material styles interact with light. A light source was created at a constant radius of 10 units away from the center of the scene on the xy plane, and some positive units towards the z axis. UI controls were added for controlling the angle and Z coordinate, so the user is allowed to move the light source along the surface of a cylinder around the z axis. 

The range of angles is from -PI to PI, and the range of Z is from -40 to 40 units.

The light source is a spotlight type with a spot cutoff of 40 degrees. The direction of the spotlight is always facing towards the center of the scene (origin - light_position). The light source's specular and diffuse components are both white. A violet-tinged ambient component was added so the non-lighted faces are not completely black and can still stand out from the black outlines.

Keyframe Animation
------------------

Since most of the keyframe animation tools were already provided in the starter code, not much had to be done. I added functionality to save the current DOF values at a user-specified time to an entry in the keyframes array, so the program can interpolate between all these values to produce an animation of the robot penguin.

The sample keyframe animation I have provided begins by making the penguin walk by moving its opposite wings and legs in an opposite manner, but then also demonstrates all 26 degrees of freedom by physically "meaningless" movements like the rotations around three axes etc.

I did not implement Catmull-Rom interpolation after consulting an instructor's note on Piazza. The interpolation between keyframes is done using the given source code interpolation method.



End of Report


